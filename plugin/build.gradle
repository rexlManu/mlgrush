import org.apache.tools.ant.filters.ReplaceTokens

plugins {
  id 'com.github.johnrengelman.shadow' version '6.1.0'
  id 'java'
}

sourceCompatibility = targetCompatibility = '1.8'
compileJava.options.encoding = "UTF-8"

group 'de.rexlmanu.mlgrush'
version project.property('version')

tasks.build.dependsOn tasks.shadowJar

repositories {
  mavenCentral()
  maven {
    name "spigot-repo"
    url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
  }
  maven {
    name "ossrh"
    url "https://oss.sonatype.org/content/repositories/snapshots"
  }
  maven {
    url "https://jitpack.io"
  }
  maven {
    name "pluginstube-repo"
    url "http://45.142.114.88:8082/artifactory/pluginstube"
    credentials {
      username = "manu"
      password = "Sm651vIj"
    }
    metadataSources {
      artifact()
    }
  }
}

configurations.all {
  resolutionStrategy {
    cacheChangingModulesFor 0, 'seconds'
  }
}

dependencies {
  implementation('org.projectlombok:lombok:1.18.20')
  annotationProcessor('org.projectlombok:lombok:1.18.20')
  implementation('org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT')
//     implementation(files('../testserver/spigot-1.8.8.jar')) // for nms
  implementation group: 'io.netty', name: 'netty-all', version: '4.1.65.Final'

  /*
  implementation('net.pluginstube:library:1.0.2')
  This dont work because intellij still wants to check for version 1.0.2 and the repository sucks hard balls.
   */

  implementation(files('../libs/library-1.0.2.jar'))

  compile('org.jetbrains:annotations:16.0.2')
  compile('eu.miopowered:packetlistener:1.0') {
    transitive = false
  }
  compile(project(':arenalib')) {
    transitive = false
  }
  compile('com.github.cryptomorin:XSeries:7.9.1.1')
  compile('fr.mrmicky:fastboard:v1.1.0')
  compile('net.jodah:expiringmap:0.5.9')
  compile('xyz.xenondevs:particle:1.6.1')
}

processResources {
  from(sourceSets.main.resources.srcDirs) {
    filter ReplaceTokens, tokens: [
      version    : version,
      description: project.property('plugin.description'),
      author     : project.property('plugin.author'),
      website    : project.property('plugin.website'),
    ]
    duplicatesStrategy = 'include'
  }
}

shadowJar {
  relocate 'fr.mrmicky.fastboard', 'de.rexlmanu.mlgrush.plugin.libs.fastboard'
  relocate 'com.cryptomorin.xseries', 'de.rexlmanu.mlgrush.plugin.libs.xseries'
  relocate 'eu.miopowered.packetlistener', 'de.rexlmanu.mlgrush.plugin.libs.packetlistener'
  relocate 'net.jodah.expiringmap', 'de.rexlmanu.mlgrush.plugin.libs.expiringmap'
  relocate 'xyz.xenondevs.particle', 'de.rexlmanu.mlgrush.plugin.libs.particle'

  configurations = [project.configurations.compile]
  archiveFileName = "mlgrush-${version}.jar"
}